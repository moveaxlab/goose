package dialectquery

import "fmt"

type Oracle struct{}

var _ Querier = (*Oracle)(nil)

func (p *Oracle) CreateTable(tableName string) string {
	q := `CREATE TABLE %s (
        id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
        version_id NUMBER(10) NOT NULL,
        is_applied BOOLEAN NOT NULL,
        tstamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY(id)
    )`
	return fmt.Sprintf(q, tableName)
}

func (p *Oracle) InsertVersion(tableName string) string {
	q := `INSERT INTO %s (version_id, is_applied) VALUES (:pr1, :pr2)`
	return fmt.Sprintf(q, tableName)
}

func (p *Oracle) DeleteVersion(tableName string) string {
	q := `DELETE FROM %s WHERE version_id=:pr1`
	return fmt.Sprintf(q, tableName)
}

func (p *Oracle) GetMigrationByVersion(tableName string) string {
	q := `SELECT tstamp, is_applied FROM %s WHERE version_id=:pr1 ORDER BY tstamp DESC FETCH NEXT 1 ROWS ONLY`
	return fmt.Sprintf(q, tableName)
}

func (p *Oracle) ListMigrations(tableName string) string {
	q := `SELECT version_id, is_applied from %s ORDER BY id DESC`
	return fmt.Sprintf(q, tableName)
}
